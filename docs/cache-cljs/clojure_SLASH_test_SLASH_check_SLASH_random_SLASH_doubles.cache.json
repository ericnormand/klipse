["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$clojure.test.check.random.doubles","~:imports",null,"~:requires",["^ ","~$longs","~$clojure.test.check.random.longs","^:","^:"],"~:uses",null,"~:defs",["^ ","~$double-unit",["^ ","~:meta",["^ ","~:file","^6","~:line",14,"~:column",16,"~:end-line",14,"~:end-column",27,"~:private",true],"^D",true,"^5","~$clojure.test.check.random.doubles/double-unit","^?","clojure/test/check/random/doubles.cljs","^C",27,"^A",1,"^@",14,"^B",14,"~:tag","~$number"],"~$big-double-unit",["^ ","^>",["^ ","^?","^6","^@",20,"^A",16,"^B",20,"^C",31,"^D",true],"^D",true,"^5","~$clojure.test.check.random.doubles/big-double-unit","^?","clojure/test/check/random/doubles.cljs","^C",31,"^A",1,"^@",20,"^B",20,"^F","^G"],"~$rand-long->rand-double",["^ ","~:protocol-inline",null,"^>",["^ ","^?","^6","^@",24,"^A",7,"^B",24,"^C",29,"~:arglists",["~#list",["~$quote",["^M",[["~$long"]]]]],"~:doc","Given a uniformly distributed random long, returns a uniformly\n  distributed double between 0.0 (inclusive) and 1.0 (exclusive)."],"^5","~$clojure.test.check.random.doubles/rand-long->rand-double","~:variadic",false,"^?","clojure/test/check/random/doubles.cljs","^C",29,"~:method-params",["^M",[["^O"]]],"~:protocol-impl",null,"~:arglists-meta",["^M",[null,null]],"^A",1,"^@",24,"^B",24,"~:max-fixed-arity",1,"~:fn-var",true,"^L",["^M",["^N",["^M",[["^O"]]]]],"^P","Given a uniformly distributed random long, returns a uniformly\n  distributed double between 0.0 (inclusive) and 1.0 (exclusive)."]],"~:require-macros",["^ "],"^P",null]